<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="shortcut icon" href="~/image/favicon.ico" />
    <title>主页</title>
    <link href="~/lib/bootstrap-3.3.7-dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/Main.css" rel="stylesheet" />
    <link href="~/css/Menu.css" rel="stylesheet" />
    <script src="~/lib/vue-2.6.10.min.js"></script>
    <script src="~/lib/axios-0.19.0.min.js"></script>
    <script src="~/lib/vue-axios.min.js"></script>
    <script src="~/lib/vue-router.min.js"></script>
    <script>
        Vue.config.devtools = true;
    </script>
</head>

<body>
    <div class="container-fluid" id="divMain">
        <div class="row" style="padding:0 15px;">
            <nav class="navbar navbar-noborder fixed-top">
                <div class="nav navbar-nav navbar-left">
                    <a class="navbar-brand" href="~/Home/"><img src="~/image/logo.gif" style="width:50px;height:50px" /></a>
                    <h1 class="navbar-text">xxxxxx管理系统</h1>
                </div>
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a><span class="glyphicon glyphicon-user"></span>{{UserDisplayName}}</a>
                    </li>
                    <li>
                        <a href="/Account/Logout"><span class="glyphicon glyphicon-log-out"></span>登出</a>
                    </li>
                </ul>
            </nav>
        </div>
        <div class="row">
            <div id="navigationBar" class="col-sm-2">
                <div v-for="menu in Menus" class="menuGroup">
                    <div :class="['menuTilte',{titleActive:menu.Selected}]" v-on:click="toggleMenu(menu)" v-text="menu.Name"></div>
                    <div v-show="menu.Selected">
                        <ul class="list-unstyled">
                            <li v-for="menuItem in menu.Children"><router-link :to="menuItem.Link" active-class="itemActive" v-on:click="selectItem(menuItem)">{{menuItem.Name}}</router-link></li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-sm-10" style="padding:0 5px;">
                <div id="divMainBody">
                    <router-view></router-view>
                </div>
            </div>
        </div>
    </div>
    <div style="display:none">
        @Html.Partial("../Equipment/Index.cshtml")
        @Html.Partial("../Flow/Index.cshtml")
        @Html.Partial("../Flow/NewEqRequest.cshtml")
        @Html.Partial("../Flow/ScrapEqRequest.cshtml")
        @Html.Partial("../Admin/User.cshtml")
        @Html.Partial("../Admin/UserProfile.cshtml")
    </div>
    <script>
        var routerObject = new VueRouter({
            routes: [
                { path: '/Equipment', component: Comp_EQView },
                { path: '/Flow', component: Comp_MyWorkFlow },
                { path: '/Flow/My', component: Comp_MyWorkFlow },
                { path: '/Flow/NewEqRequest', component: Comp_NewEqRequest },
                { path: '/Flow/ScrapEqRequest', component: Comp_ScrapEqRequest },
                { path: '/admin/user', component: Comp_User },
                { path: '/user/userprofile', component: Comp_UserProfile }
            ]
        });
        var vm = new Vue({
            el: "#divMain",
            data: {
                Menus: [],
                UserDisplayName: "",
                AccountName:"",
            },
            router: routerObject,
            created() {
                console.log("parent create start...");
                this.LoadUserData();
                this.LoadMenuData();                
                console.log("parent create end...");
            },
            methods: {
                toggleMenu: function (menu) {
                    if (menu.Selected == true) {
                        menu.Selected = false;
                    }
                    else {
                        this.Menus.forEach((value, index, arr) => {
                            arr[index].Selected = false;
                        });
                        menu.Selected = true;
                    }
                },
                selectItem: function (menuItem) {
                    if (menuItem.Selected != true) {
                        this.Menus.forEach((value, index, arr) => {
                            arr[index].MenuItems.forEach((innerValue, innerIndex, innerArr) => {
                                innerArr[innerIndex].Selected = false;
                            });
                        });
                        menuItem.Selected = true;
                    }
                    else {
                        return false;
                    }
                },
                LoadMenuData: function () {
                    axios.get("/Menu/GetAllMenus").then((response) => {
                        this.Menus = response.data;
                    })                    
                },
                LoadUserData: function () {                    
                    axios.get("/Account/GetCurrentUser").then((response) => {
                        this.UserDisplayName = response.data.DisplayName;
                        this.AccountName =response.data.AccountName;
                    })
                }
            }
        });
    </script>
</body>
</html>