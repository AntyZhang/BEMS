<style>
    .btn-Right {
        float: right;
        margin-right: 17px;
    }
</style>
<template id="temp_User">
    <div>
        <h2 class="withBottomLine"><b>用户一览</b></h2>
        <div class="row">
            <button class="btn btn-default btn-Right"><span class="glyphicon glyphicon-plus" style="color:green"></span><router-link to="/user/userprofile">添加</router-link></button>
        </div>
        <div style="border:1px solid #d9edf7">
            <table class="table table-hover table-bordered">
                <thead>
                    <tr>
                        <th>账号</th>
                        <th>用户名</th>
                        <th>联系地址</th>
                        <th>联系电话</th>
                        <th>备注</th>
                        <th>状态</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item in dataSource" :key="item.ID">
                        <td>{{item.AccountName}}</td>
                        <td>{{item.DisplayName}}</td>
                        <td>{{item.Address}}</td>
                        <td>{{item.Phone}}</td>
                        <td>{{item.Memo}}</td>
                        <td>{{item.State}}</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="bottom">
            <ul class="pagination">
                <li :class="{'disabled':Pagination.CurrentPage==1}">
                    <a v-on:click="GotoPage(1)">First</a>
                </li>
                <li :class="{'disabled':Pagination.CurrentPage==1}">
                    <a v-on:click="GotoPrevious">&laquo;</a>
                </li>
                <li v-if="Pagination.PageList[0]>1" class="disabled"><a>...</a></li>
                <li v-for="item in Pagination.PageList" :key="item" :class="{'active':item==Pagination.CurrentPage}">
                    <a v-on:click="GotoPage(item)">
                        <span aria-hidden="true" v-html="item"></span>
                    </a>
                </li>
                <li v-if="Pagination.PageList[Pagination.PageList.length - 1]<Pagination.TotalPage" class="disabled"><a>...</a></li>
                <li :class="{'disabled':Pagination.CurrentPage==Pagination.TotalPage}">
                    <a v-on:click="GotoNext">&raquo;</a>
                </li>
                <li :class="{'disabled':Pagination.CurrentPage==Pagination.TotalPage}">
                    <a v-on:click="GotoPage(Pagination.TotalPage)">Last</a>
                </li>
            </ul>
        </div>
    </div>
</template>
<script>
    var Comp_User = {
        template: "#temp_User",
        data: function () {
            return {
                dataSource: [],
                Pagination: {
                    CurrentPage: 1,
                    TotalPage: 0,
                    PageList: [1, 2, 3]
                }
            }
        },
        created() {
            this.LoadAllData();
        },
        methods: {
            LoadAllData() {
                axios.post("/User/LoadAllUser", { NewPage: this.Pagination.CurrentPage }).then((response) => {
                    this.dataSource = response.data;
                    this.Pagination.TotalPage = 25;
                })
            },
            GotoPrevious() {
                if (this.Pagination.CurrentPage != 1) {
                    this.GotoPage(this.Pagination.CurrentPage - 1);
                }
            },
            GotoNext() {
                if (this.Pagination.CurrentPage != this.Pagination.TotalPage) {
                    this.GotoPage(this.Pagination.CurrentPage + 1);
                }
            },
            GotoPage(num) {
                if (this.Pagination.CurrentPage != num) {
                    this.Pagination.CurrentPage = num;
                    this.AdjustPaginationAfterRecalculate();
                    this.LoadAllData();
                }
            },
            AdjustPaginationAfterRecalculate() {
                switch (this.Pagination.CurrentPage) {
                    case 1: //first
                        {
                            var diff = this.Pagination.PageList[0] - 1;
                            this.Pagination.PageList.forEach((value, index, arr) => {
                                arr[index] = value - diff;
                            })
                        }
                        break;
                    case this.Pagination.TotalPage://last
                        {
                            var diff = this.Pagination.TotalPage - this.Pagination.PageList[this.Pagination.PageList.length - 1];
                            this.Pagination.PageList.forEach((value, index, arr) => {
                                arr[index] = value + diff;
                            });
                        }
                        break;
                    case this.Pagination.PageList[0]://previous
                        {
                            this.Pagination.PageList.forEach((value, index, arr) => {
                                arr[index] = value - 1;
                            })
                        }
                        break;
                    case this.Pagination.PageList[this.Pagination.PageList.length - 1]://next
                        {
                            this.Pagination.PageList.forEach((value, index, arr) => {
                                arr[index] = value + 1;
                            })
                        }
                        break;

                    default:
                        break;
                }
            },
        }
    };
</script>



