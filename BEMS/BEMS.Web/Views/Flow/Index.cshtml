@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    [v-cloak] {
        display: none;
    }

    .tabs {
        font-size: 14px;
        color: #657180;
    }

    .tabs-bar:after {
        content: '';
        display: block;
        width: 100%;
        height: 1px;
        background: #d7dde4;
        margin-top: -1px;
    }

    .tabs-tab {
        display: inline-block;
        padding: 4px 16px;
        margin-right: 6px;
        background: #fff;
        border: 1px solid #d7dde4;
        cursor: pointer;
        position: relative;
    }

        .tabs-tab:hover {
            color: #336699;
            font-weight: bolder;
        }

    .tabs-tab-active {
        color: #336699;
        border-top: 1px solid #336699;
        border-bottom: 1px solid #fff;
        transform: translateY(-1px);
        transition: transform 0.5s;
    }

        .tabs-tab-active:before {
            content: '';
            display: block;
            height: 1px;
            background: #3399ff;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
        }

    .tabs_content {
        padding: 8px 0;
    }

    .pane {
        margin-top: 26px;
        font-size: 16px;
        line-height: 24px;
        color: #333;
        text-align: justify;
    }
</style>

<div id="app" v-cloak>
    <tabs v-model="activeIndex">
        <panel label="待审批">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>序号</th>
                        <th>单据类型</th>
                        <th>申请人</th>
                        <th>申请日期</th>
                    </tr>
                </thead>
                <tbody>
                    @*<tr v-for="item in dataSource" :key="item.ID">
                            <td>{{item.ID}}</td>
                            <td>{{item.EType}}</td>
                            <td>{{item.Vendor}}</td>
                            <td>{{item.EModel}}</td>
                            <td>{{item.SeriaNumber}}</td>
                            <td>{{item.IP}}</td>
                            <td>{{item.MAC}}</td>
                            <td>{{item.LimitedUseage}}</td>
                            <td>{{item.Owner}}</td>
                            <td>{{item.Address}}</td>
                            <td>{{item.IsInUse}}</td>
                        </tr>*@
                </tbody>
            </table>
        </panel>
        <panel label="已审批">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>序号</th>
                        <th>单据类型</th>
                        <th>申请人</th>
                        <th>申请日期</th>
                    </tr>
                </thead>
                <tbody>
                    @*<tr v-for="item in dataSource" :key="item.ID">
                            <td>{{item.ID}}</td>
                            <td>{{item.EType}}</td>
                            <td>{{item.Vendor}}</td>
                            <td>{{item.EModel}}</td>
                            <td>{{item.SeriaNumber}}</td>
                            <td>{{item.IP}}</td>
                            <td>{{item.MAC}}</td>
                            <td>{{item.LimitedUseage}}</td>
                            <td>{{item.Owner}}</td>
                            <td>{{item.Address}}</td>
                            <td>{{item.IsInUse}}</td>
                        </tr>*@
                </tbody>
            </table>
        </panel>
    </tabs>
</div>

<script>
    Vue.component('panel', {
        name: 'pane',
        template: '\
        <div class="pane" v-show="isShow">\
            <slot></slot>\
        </div>\
        ',
        props: {
            //标题
            label: {
                type: String,
                default: ''
            }
        },
        data: function () {
            return {
                //显示或隐藏
                isShow: true
            }
        },
        methods: {
            //通知父组件，更新标题
            init() {
                this.$parent.init();
            }
        },
        watch: {
            //当 label 值发生变化时，更新标题
            label() {
                this.init();
            }
        },
        //挂载时，更新标题
        mounted() {
            this.init();
        }
    });
    Vue.component('tabs', {
        template: '\<div class="tabs">\
        <div class="tabs-bar">\
            <!-- 标签页标题-->\
            <div :class="tabClass(item)"\
                v-for="(item, index) in titleList"\
                v-on:click="change(index)">\
                {{ item.label }}\
                </div>\
            </div>\
            <div class="tabs-content">\
             <!-- pane 组件位置-->\
                <slot></slot>\
            </div>\
           </div>',
        props: {
            value: {
                type: [String, Number]
            }
        },
        data: function () {
            return {
                currentIndex: this.value,
                titleList: []//存放标题
            }
        },
        methods: {
            //设置样式
            tabClass: function (item) {
                return ['tabs-tab', {
                    //为当前选中的 tab 添加选中样式
                    'tabs-tab-active': (item.name === this.currentIndex)
                }]

            },
            //获取定义的所有 pane 组件
            getTabs() {
                return this.$children.filter(function (item) {
                    return item.$options.name === 'pane';
                })
            },
            //更新 pane 是否显示状态
            updateIsShowStatus() {
                var tabs = this.getTabs();
                var that = this;
                //迭代判断并设置某个标签页是显示还是隐藏状态
                tabs.forEach(function (tab, index) {
                    return tab.isShow = (index === that.currentIndex);
                })
            },
            //初始化
            init() {
                /**
                 * 初始化标题数组
                 */
                this.titleList = [];
                var that = this;//设置 this 引用
                this.getTabs().forEach(function (tab, index) {
                    that.titleList.push({
                        label: tab.label,
                        name: index
                    });

                    //初始化默认选中的 tab 索引
                    if (index === 0) {
                        if (!that.currentIndex) {
                            that.currentIndex = index;
                        }
                    }
                });

                this.updateIsShowStatus();
            },
            //点击 tab 标题时，更新 value 值为相应的索引值
            change: function (index) {
                var nav = this.titleList[index];
                var name = nav.name;
                this.$emit('input', name);
            }
        },
        watch: {
            //当 value 值发生改变时，更新 currentIndex
            value: function (val) {
                this.currentIndex = val;
            },
            //当 currentIndex 值发生改变时，更新 pane 是否显示状态
            currentIndex: function () {
                this.updateIsShowStatus();
            }
        }
    });
        var app = new Vue({
            el: '#app',
            data: {
                activeIndex: 0
            }
        });
</script>
